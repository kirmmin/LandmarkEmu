// <auto-generated />
using System;
using LandmarkEmulator.Database.Auth;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LandmarkEmulator.Database.Auth.Migrations
{
    [DbContext(typeof(AuthContext))]
    [Migration("20220111035602_Accounts")]
    partial class Accounts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LandmarkEmulator.Database.Auth.Model.AccountModel", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("createTime")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("")
                        .HasColumnName("s");

                    b.Property<string>("ServerTicket")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("")
                        .HasColumnName("serverTicket");

                    b.Property<string>("SessionKey")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(32)")
                        .HasDefaultValue("")
                        .HasColumnName("sessionKey");

                    b.Property<DateTime>("SessionKeyExpiration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sessionKeyExpiration")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("username");

                    b.Property<string>("Verifier")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(512)")
                        .HasDefaultValue("")
                        .HasColumnName("v");

                    b.HasKey("Id");

                    b.HasIndex("Salt")
                        .HasDatabaseName("salt");

                    b.HasIndex("Username")
                        .HasDatabaseName("username");

                    b.HasIndex("Verifier")
                        .HasDatabaseName("verifier");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("LandmarkEmulator.Database.Auth.Model.ZoneServerModel", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<uint>("Flags")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(0u)
                        .HasColumnName("flags");

                    b.Property<string>("Host")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(64)")
                        .HasDefaultValue("127.0.0.1")
                        .HasColumnName("host");

                    b.Property<uint>("NameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValue(62147u)
                        .HasColumnName("nameId");

                    b.Property<ushort>("Port")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(5) unsigned")
                        .HasDefaultValue((ushort)19000)
                        .HasColumnName("port");

                    b.HasKey("Id");

                    b.ToTable("zone_server", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1ul,
                            Flags = 1u,
                            Host = "127.0.0.1",
                            NameId = 62147u,
                            Port = (ushort)19000
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
